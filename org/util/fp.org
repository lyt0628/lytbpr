

* Code
** Module
#+BEGIN_SRC lua :tangle ../../src/util/fp.lua
  <<M>>
  return M
#+END_SRC

* M
:PROPERTIES:
:header-args: :noweb-ref M
:END:


#+begin_src lua
  local M = {}
#+end_src


** any
#+BEGIN_SRC lua
  function M.any(t, fn)
     local result = false
     for i,v in ipairs(t) do
        if fn(v, i) then
           result = true
           break
        end
     end

     return result
  end
#+END_SRC

** all
#+BEGIN_SRC lua
  function M.all(t, fn)
     local result = true
     for i,v in ipairs(t) do
        if not fn(v, i) then
           result = false
           break
        end
     end

     return result
  end
#+END_SRC


** map
#+BEGIN_SRC lua
  function M.map(t, fn)
     local result = {}
     for i,v in ipairs(t) do
        result[i] = fn(v, i)
     end

     return result
  end
#+END_SRC

** max
#+BEGIN_SRC lua
  function M.max(t, fn)
     local result 
     for i,v in ipairs(t) do
       if not result then
          result = t[i]
       else
          result = (fn(result, t[i]) and result) or t[i]
       end
     end
     return result
  end
#+END_SRC

** min
#+BEGIN_SRC lua
  function M.min(t, fn)
     local result 
     for i,v in ipairs(t) do
       if not result then
          result = t[i]
       else
          result = (fn(result, t[i]) and t[i]) or result
       end
     end
     return result
  end
#+END_SRC


** filter
#+BEGIN_SRC lua
  function M.filter(t, fn)
     local result = {}
     for i,v in ipairs(t) do
        if fn(v, i) then
           table.insert(result, v)
        end
     end
  
     return result
  end
#+END_SRC

